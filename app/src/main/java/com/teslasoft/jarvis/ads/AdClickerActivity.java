/* This is a library file. Do not modify (except package name) */
/* This is a AdActivity (ad manager), which redirect to ad server */
package com.teslasoft.jarvis.ads;

// Connect libraries
// For correctly working this adservice using library "Android Support"
import android.os.*;
import android.app.*;
import android.content.*;
import com.android.billingclient.api.BillingClient;
import com.android.billingclient.api.BillingClient.Builder;
import com.android.billingclient.api.BillingClient.*;
import com.android.billingclient.api.BillingClientStateListener;
import com.android.billingclient.api.BillingResult;
import com.android.billingclient.api.BillingResults;
import com.android.billingclient.api.BillingResult.*;
import com.android.billingclient.api.PurchasesUpdatedListener;
import com.android.billingclient.api.*;
import android.view.*;
import com.teslasoft.libraries.support.R;
import android.view.View.*;
import android.view.View;
import android.widget.*;
import java.util.*;
import android.content.*;
import android.net.*;
import android.support.v7.appcompat.*;
import android.webkit.WebView;
import android.webkit.WebSettings;
import android.webkit.JavascriptInterface;
import android.view.LayoutInflater;
import java.lang.*;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import android.app.Activity;
import android.transition.Scene;
import android.app.Instrumentation;
import android.webkit.*;
import android.annotation.*;
import android.view.animation.Animation.*;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.Animation.AnimationListener;

/* Name of activity */
public class AdClickerActivity extends Activity
{
	// "ad" is clickable LinearLayout, which redirect user to ad server
	LinearLayout ad;
	
	// "close" is close button
	LinearLayout close;
	
	// "intent" is redirector
	private Intent intent;
	
	// "adid" is extra string with value of Extras adId
	private String adid;
	
	// "ads" is ad (check connection)
	private WebView ads;
	
	/* This if specified method, generated by android.jar complier (Android 9 Pixelexperience) */
	/* Autogenerated method. Do not modify. If you use Android Studio you can delete these method */
	
	public void onPointerCaptureChanged(boolean hasCapture)
	{
		
	}

	// onAdShowed (onCreate method)
	@Override
	protected void onCreate(Bundle savedInstanceState)
	{
		// Autogenerated method onCreate
		super.onCreate(savedInstanceState);
		
		// Set opening animation
		overridePendingTransition(0, 0);
		
		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P)
		{
            String processName = getProcessName(this);
			try {
				ads.setDataDirectorySuffix(processName);
			}

			catch (Exception e)
			{

			}
            /*if (!"com.teslasoft.libraries.support:adc".equals(processName))
			 {
			 ads.setDataDirectorySuffix(processName);
			 }*/
		}
		
		// Set Layout
		setContentView(R.layout.aclk);
		
		
		// Declare variable "LinearLayout ad" and connect it ti R.id.button
		ad = (LinearLayout) findViewById(R.id.button);
		
		// If ad load failed hide it
		ad.setVisibility(View.GONE);
		
		// Declare variable "LinearLayout close" and connect it to R.id.close
		close = (LinearLayout) findViewById(R.id.close);
		
		// Declare variable "WebView ads" and connect it to R.id.ads
		ads = (WebView) findViewById(R.id.ads);
		
		
		
		ads.setBackgroundColor(0x00000000);
		
		// Setup ad webview
		ads.getSettings().setJavaScriptEnabled(true);

		final Activity activity = this;

		ads.setWebViewClient(new WebViewClient()
		{
			// Combatibility with different Android versions
			@SuppressWarnings("deprecation")
			@Override
			public void onReceivedError(WebView view, int errorCode, String description, String failingUrl)
			{
				// If connection ckeck failed close ad
				finish();
				overridePendingTransition(0, 0);
			}
			
			// Combatibility with different Android versions
			@TargetApi(android.os.Build.VERSION_CODES.M)
			@Override
			public void onReceivedError(WebView view, WebResourceRequest req, WebResourceError rerr)
			{
				// If connection check failed close ad
				finish();
				overridePendingTransition(0, 0);
			}

			public void onPageFinished(WebView view, String url)
			{
				// If connection ckeck successfull open ad
				final Handler handler = new Handler();
				handler.postDelayed(new Runnable()
				{
					// Debug gui
					@Override
					public void run()
					{
						ad.setVisibility(View.VISIBLE);
					}
				}, 100);
			}
		});
		
		// Load advertisement
		ads.loadUrl("https://s2---sd-r56v7-g-ad.jarvis.studio/ads/test/ad/index.html");
		
		// Set ad clickable and animate it
		ad.setOnTouchListener(new OnTouchListener()
		{
			@Override
			public boolean onTouch(View v, MotionEvent event)
			{
				if(event.getAction() == MotionEvent.ACTION_DOWN)
				{
					ad.setBackgroundColor(0x3322C5F4);
				}
			
				if(event.getAction() == MotionEvent.ACTION_UP)
				{
					ad.setBackgroundColor(android.R.color.transparent);
				}
				
				return false;
			}
		});
		
		// Set close button clickable and animate it
		close.setOnTouchListener(new OnTouchListener()
		{
			@Override
			public boolean onTouch(View v, MotionEvent event)
			{
				if(event.getAction() == MotionEvent.ACTION_DOWN)
				{
					close.setBackgroundColor(0x66DEDEDE);
				}

				if(event.getAction() == MotionEvent.ACTION_UP)
				{
					close.setBackgroundColor(0x44ABABAB);
				}

				return false;
			}
		});
		
		try
		{
			// Retreiving ad id
			Intent intent = getIntent();
			Bundle extras = intent.getExtras();
			adid = extras.getString("webId");
			
			if (adid == "")
			{
				// If ad identifier invalid close ad (terminate process)
				finishAffinity();
			}
			
			else
			{
				// If ad identifier right continue executing (not terminate process)
			}
		}

		catch (Exception e)
		{
		 	finishAffinity();
			// Catch exception
			// NullPointerException: Attempt to invoke virtual method intent.getExtras(String) on a null object referance ...
		}
	}
	
	public String getProcessName(Context context)
	{
        if (context == null) return null;
        ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
        for (ActivityManager.RunningAppProcessInfo processInfo : manager.getRunningAppProcesses())
		{
            if (processInfo.pid == android.os.Process.myPid())
			{
                return processInfo.processName;
            }
        }

		return null;
	}
	
	private boolean isMyServiceRunning(Class<?> serviceClass)
	{
		ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);

		for (ActivityManager.RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE))
		{
			if (serviceClass.getName().equals(service.service.getClassName()))
			{
				return true;
			}
		}
		return false;
	}
	
	// Set ad clickable
	public void bClick(View v)
	{
		ad.setBackgroundColor(android.R.color.transparent);
		
		try
		{
			// Redirect user to ad server
			Intent intent = getIntent();
			Bundle extras = intent.getExtras();
			adid = extras.getString("webId");
		 	Intent i = new Intent();
			i.setAction(Intent.ACTION_VIEW);
			i.setData(Uri.parse("https://s2---sd-r56v7-g-ad.jarvis.studio/ads/".concat(adid)));
		 	startActivity(i);
		}

		catch (Exception e)
		{
		 	// Catch exception
			// NullPointerException: Attempt to invoke virtual method intent.getExtras(String) on a null object referance ...
		}
	}
	
	// Close ad
	public void closeAd(View v)
	{
		close.setBackgroundColor(0x44ABABAB);
		finishAffinity();
	}
	
	// Close ad
	@Override
	public void onBackPressed()
	{
		finishAffinity();
	}

	@Override
	protected void onPause()
	{
		// TODO: Implement this method
		super.onPause();
	}
}
