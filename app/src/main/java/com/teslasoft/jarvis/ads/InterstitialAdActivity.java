/* This is a library file. Do not modify (except package name) */
/* This is a subactivity, which show ad image */
package com.teslasoft.jarvis.ads;

// Connect libraries
// For correctly working this adservice using library "Android Support"
import android.os.*;
import android.app.*;
import com.android.billingclient.api.BillingClient;
import com.android.billingclient.api.BillingClient;
import com.android.billingclient.api.BillingClient.Builder;
import com.android.billingclient.api.BillingClient.*;
import com.android.billingclient.api.BillingClientStateListener;
import com.android.billingclient.api.BillingResult;
import com.android.billingclient.api.BillingResults;
import com.android.billingclient.api.BillingResult.*;
import com.android.billingclient.api.PurchasesUpdatedListener;
import com.android.billingclient.api.*;
import android.content.*;
import com.teslasoft.libraries.support.R;
import android.view.*;
import android.widget.*;
import java.util.*;
import android.content.*;
import android.util.*;
import android.net.*;
import android.support.v7.appcompat.*;
import android.webkit.WebView;
import android.webkit.WebSettings;
import android.webkit.JavascriptInterface;
import android.view.LayoutInflater;
import java.lang.*;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import android.app.Activity;
import android.transition.Scene;
import android.app.Instrumentation;
import android.webkit.*;
import android.annotation.*;
import android.view.animation.Animation.*;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.Animation.AnimationListener;

/* Name of activity */
public class InterstitialAdActivity extends Activity
{
	// Buy adfree version
	private BillingClient billingClient;
	
	// "intent" is redirector
	private Intent intent;
	
	// "adid" is extra string with value of Extras adId
	private String adid;
	
	// "ads" is ad
	private WebView ads;
	
	/* This if specified method, generated by android.jar complier (Android 9 Pixelexperience) */
	/* Autogenerated method. Do not modify. If you use Android Studio you can delete these method */
	@Override
	public void onPointerCaptureChanged(boolean hasCapture)
	{
		
	}

	// adShow (onCreate method)
	@Override
	protected void onCreate(Bundle savedInstanceState)
	{
		// Autogenerated method onCreate
		super.onCreate(savedInstanceState);
		
		
		// Lagfix for Andriod 9
		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P)
		{
            String processName = getProcessName(this);
			
			try {
				ads.setDataDirectorySuffix(processName);
			}
			
			catch (Exception e)
			{
				
			}
			
            /*if (!"com.teslasoft.libraries.support:adc".equals(processName))
			 {
			 ads.setDataDirectorySuffix(processName);
			 }*/
		}
		
		// Set Layout
		setContentView(R.layout.interstitial_ad);
		
		// Check internet connection
		if (NetStat.getInstance(this).isOnline())
		{
			// If connection ckec successfull show ad
			try
			{
				// Retreiving ad identifier
				Intent intent = getIntent();
				Bundle extras = intent.getExtras();
				adid = extras.getString("adId");
				
				// Declare variable "WebView ads" and connect it to R.id.ads
				ads = (WebView) findViewById(R.id.ads);
				
				/*if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P)
				{
					String processName = getProcessName(this);
					if (!"com.teslasoft.libraries.support:ads".equals(processName))
					{
						ads.setDataDirectorySuffix(processName);
					}
				}*/
				
				ads.setBackgroundColor(0x00000000);
				
				ads.getSettings().setLoadWithOverviewMode(true);
				ads.getSettings().setUseWideViewPort(true);
				ads.setVerticalScrollBarEnabled(false);
				ads.setHorizontalScrollBarEnabled(false);
				
				// If ad load failed hide it
				ads.setVisibility(View.GONE);
				ads.setAlpha(0);
				
				// Setup ad webview
				ads.getSettings().setJavaScriptEnabled(true);

				final Activity activity = this;

				ads.setWebViewClient(new WebViewClient()
				{
					// Combatibility with different Android versions
					@SuppressWarnings("deprecation")
					@Override
					public void onReceivedError(WebView view, int errorCode, String description, String failingUrl)
					{
						// If connection ckeck failed close ad
						finish();
						overridePendingTransition(0, 0);
					}
					
					// Combatibility with different Android versions
					@TargetApi(android.os.Build.VERSION_CODES.M)
					@Override
					public void onReceivedError(WebView view, WebResourceRequest req, WebResourceError rerr)
					{
						// If connection ckeck failed close ad
						finish();
						overridePendingTransition(0, 0);
					}

					public void onPageFinished(WebView view, String url)
					{
						// If connection ckeck successfull open ad
						ads.setVisibility(View.VISIBLE);
						
						// Debug gui
						final Handler handler = new Handler();
						handler.postDelayed(new Runnable()
						{
							@Override
							public void run()
							{
								ads.setAlpha(1.f);
							}
						}, 100);
						
						// Start ad manager
						Intent i = new Intent(com.teslasoft.jarvis.ads.InterstitialAdActivity.this, com.teslasoft.jarvis.ads.AdClickerActivity.class);
						Bundle extr = new Bundle();
						extr.putString("webId", adid);
						i.putExtras(extr);
						startActivity(i);
					}
				});

				// Load advertisement
				ads.loadUrl("https://s2---sd-r56v7-g-ad.jarvis.studio/ads/".concat(adid).concat("/ad/ad.png"));
			}

			catch (Exception e)
			{
				// Catch exception
				// NullPointerException: Attempt to invoke virtual method intent.getExtras(String) on a null object referance ...
				finish();
				overridePendingTransition(0, 0);
			}
		}
		
		else
		{
			// If connection check failed close ad
			finish();
			overridePendingTransition(0, 0);
		}
	}
	
	public String getProcessName(Context context)
	{
        if (context == null) return null;
        ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
        for (ActivityManager.RunningAppProcessInfo processInfo : manager.getRunningAppProcesses())
		{
            if (processInfo.pid == android.os.Process.myPid())
			{
                return processInfo.processName;
            }
        }

		return null;
	}
}
